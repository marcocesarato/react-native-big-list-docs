(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[218],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=i,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3094:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var r=t(2122),i=t(9756),o=(t(7294),t(3905)),a=["components"],s={sidebar_position:3},c={unversionedId:"basics/sections-list",id:"basics/sections-list",isDocsHomePage:!1,title:"Sections List",description:"To create a section list you need to specify the sections prop. For simplicity, sections is a plain array containing another plain array with the items (section items) to render. If specified data prop will be ignored and so it'll replace the data prop.",source:"@site/docs/basics/sections-list.md",sourceDirName:"basics",slug:"/basics/sections-list",permalink:"/react-native-big-list-docs/basics/sections-list",editUrl:"https://github.com/marcocesarato/react-native-big-list/edit/master/docs/docs/basics/sections-list.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Columns list",permalink:"/react-native-big-list-docs/basics/columns-list"},next:{title:"Example",permalink:"/react-native-big-list-docs/basics/example"}},l=[{value:"Data examples",id:"data-examples",children:[]},{value:"Example",id:"example",children:[]}],p={toc:l};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To create a section list you need to specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"sections")," prop. For simplicity, ",(0,o.kt)("inlineCode",{parentName:"p"},"sections")," is a plain array containing another plain array with the items (section items) to render. If specified ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," prop will be ignored and so it'll replace the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," prop."),(0,o.kt)("p",null,"It's required if no data is specified or if you want to use sticky headers (look at ",(0,o.kt)("inlineCode",{parentName:"p"},"renderSectionHeader"),") with sections."),(0,o.kt)("p",null,"It enables also the ",(0,o.kt)("inlineCode",{parentName:"p"},"renderSectionHeader")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"renderSectionFooter")," props."),(0,o.kt)("h3",{id:"data-examples"},"Data examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"[\n  // Section 1\n  [1, 2],\n  // Section 2\n  [3, 4],\n  /* ... */\n];\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'[\n  [\n    // Section 1\n    { label: "1", value: 1 /* ... */ },\n    { label: "2", value: 2 /* ... */ },\n  ],\n  [\n    // Section 2\n    { label: "3", value: 3 /* ... */ },\n    { label: "4", value: 4 /* ... */ },\n  ],\n  /* ... */\n];\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import BigList from "react-native-big-list";\n\n/* ... */\n\nconst sections = [\n  [\n    // Section 0\n    { label: "1", value: 1 /* ... */ },\n    { label: "2", value: 2 /* ... */ },\n  ],\n  [\n    // Section 1\n    { label: "3", value: 3 /* ... */ },\n    { label: "4", value: 4 /* ... */ },\n  ],\n  [\n    // Section 2\n    { label: "6", value: 6 /* ... */ },\n    { label: "6", value: 6 /* ... */ },\n  ],\n  /* ... */\n];\n\nconst renderItem = ({ item, index }) => (\n  <MyListItem label={item.label} value={item.value} />\n);\nconst renderHeader = () => <MyHeader />;\nconst renderFooter = () => <MyFooter />;\nconst renderSectionHeader = () => <MySectionHeader />;\nconst renderSectionFooter = () => <MySectionFooter />;\n\nreturn (\n  <BigList\n    sections={sections}\n    renderItem={renderItem}\n    renderHeader={renderHeader}\n    renderFooter={renderFooter}\n    renderSectionHeader={renderSectionHeader}\n    renderSectionFooter={renderSectionFooter}\n    itemHeight={50}\n    headerHeight={90}\n    footerHeight={100}\n    sectionHeaderHeight={90} // Required to show section header\n    sectionFooterHeight={100} // Required to show section footer\n  />\n);\n')))}d.isMDXComponent=!0}}]);